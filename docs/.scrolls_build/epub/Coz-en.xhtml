<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Coz</title>
    <link rel="stylesheet" href="_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="_static/pygments.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="coz">
<h1>Coz</h1>
<div class="section" id="causal-profiling-with-coz">
<h2>Causal profiling with coz</h2>
<p>With coz you can profile two things:</p>
<blockquote>
<div><ul class="simple">
<li><p>throughput</p></li>
<li><p>latency</p></li>
</ul>
</div></blockquote>
<p>If you want to profile throughput of your application, you should switch on the <em>COZ_PROFILING</em> cmake option and include debug information in your exectuable with <em>Debug</em> or <em>RelWithDebInfo</em> release modes in cmake. Doing so will include coz progress points when serving a request. Profiling latency is currently not supported in whole application scope, but can still be done in user code.</p>
<p>When you’re done compiling you application with progress points included. You need to run the executable with the coz profiler, for example <em>coz run — [path to your executable]</em>.</p>
<p>Lastly, the application needs to be stressed, for best results you need to stress all code paths and run the profile for a good amount of time, 15+ min.</p>
<p>The final profile will be a <em>profile.coz</em> file created in the current working directory. To view results, open the profile in the official <a class="reference external" href="https://plasma-umass.org/coz/">viewer</a><span class="link-target"> [https://plasma-umass.org/coz/]</span> , or you could run a local copy from the official <a class="reference external" href="https://github.com/plasma-umass/coz">git repo</a><span class="link-target"> [https://github.com/plasma-umass/coz]</span> .</p>
<p>Coz also supports scoping source files included for the profile with –source-scope &lt;pattern&gt; or -s &lt;pattern&gt; among other things, that should prove useful.</p>
<p>For more information checkout:</p>
<blockquote>
<div><ul class="simple">
<li><p>coz run –help</p></li>
<li><p><a class="reference external" href="https://github.com/plasma-umass/coz">Git repo</a><span class="link-target"> [https://github.com/plasma-umass/coz]</span></p></li>
<li><p><a class="reference external" href="https://github.com/plasma-umass/coz">Coz whitepaper</a><span class="link-target"> [https://github.com/plasma-umass/coz]</span></p></li>
</ul>
</div></blockquote>
</div>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>