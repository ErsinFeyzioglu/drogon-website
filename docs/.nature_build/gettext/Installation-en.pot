# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, an-tao
# This file is distributed under the same license as the drogon package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: drogon \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-09-19 19:28+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/Installation-en.rstd:3
msgid "Installation"
msgstr ""

#: ../../source/Installation-en.rstd:5
msgid "This section takes Linux as an example to introduce the installation process. Other systems are similar;"
msgstr ""

#: ../../source/Installation-en.rstd:9
msgid "System Requirements"
msgstr ""

#: ../../source/Installation-en.rstd:11
msgid "The Linux kernel should be not lower than 2.6.9, 64-bit version;"
msgstr ""

#: ../../source/Installation-en.rstd:12
msgid "The gcc version is not less than 5.4.0;"
msgstr ""

#: ../../source/Installation-en.rstd:13
msgid "Use cmake as the build tool, and the cmake version should be not less than 3.5;"
msgstr ""

#: ../../source/Installation-en.rstd:14
msgid "Use git as the version management tool;"
msgstr ""

#: ../../source/Installation-en.rstd:18
msgid "Library Dependencies"
msgstr ""

#: ../../source/Installation-en.rstd:20
msgid "trantor, a non-blocking I/O C++ network library, also developed by the author of Drogon, has been used as a git repository submodule, no need to install in advance;"
msgstr ""

#: ../../source/Installation-en.rstd:21
msgid "jsoncpp, JSON's c++ library, the version should be no *less than 1.7*;"
msgstr ""

#: ../../source/Installation-en.rstd:22
msgid "libuuid, generating c library of uuid;"
msgstr ""

#: ../../source/Installation-en.rstd:23
msgid "zlib, used to support compressed transmission;"
msgstr ""

#: ../../source/Installation-en.rstd:24
msgid "OpenSSL, not mandatory, if the OpenSSL library is installed, drogon will support HTTPS as well, otherwise drogon only supports HTTP."
msgstr ""

#: ../../source/Installation-en.rstd:25
msgid "c-ares, not mandatory, if the c-ares library is installed，drogon will be more efficient with DNS;"
msgstr ""

#: ../../source/Installation-en.rstd:26
msgid "libbrotli, not mandatory, if the libbrotli library is installed, drogon will support brotli compression when sending HTTP responses;"
msgstr ""

#: ../../source/Installation-en.rstd:27
msgid "boost, the version should be no less than 1.61, is required only if the C++ compiler does not support C++ 17."
msgstr ""

#: ../../source/Installation-en.rstd:28
msgid "the client development libraries of postgreSQL, mariadb and sqlite3, not mandatory, if one or more of them is installed, drogon will support access to the according database."
msgstr ""

#: ../../source/Installation-en.rstd:29
msgid "gtest, not mandatory, if the gtest library is installed, the unit tests can be compiled."
msgstr ""

#: ../../source/Installation-en.rstd:33
msgid "System Preparation Examples"
msgstr ""

#: ../../source/Installation-en.rstd:36
msgid "Ubuntu 18.04"
msgstr ""

#: ../../source/Installation-en.rstd:38
#: ../../source/Installation-en.rstd:75
msgid "Environment"
msgstr ""

#: ../../source/Installation-en.rstd:47
#: ../../source/Installation-en.rstd:102
msgid "jsoncpp"
msgstr ""

#: ../../source/Installation-en.rstd:53
#: ../../source/Installation-en.rstd:113
msgid "uuid"
msgstr ""

#: ../../source/Installation-en.rstd:59
#: ../../source/Installation-en.rstd:119
msgid "OpenSSL"
msgstr ""

#: ../../source/Installation-en.rstd:66
#: ../../source/Installation-en.rstd:125
msgid "zlib"
msgstr ""

#: ../../source/Installation-en.rstd:73
msgid "CentOS 7.5"
msgstr ""

#: ../../source/Installation-en.rstd:83
msgid "The default installed cmake version is too low, use source installation"
msgstr ""

#: ../../source/Installation-en.rstd:91
msgid "Upgrade gcc"
msgstr ""

#: ../../source/Installation-en.rstd:100
msgid "Note: Command scl enable devtoolset-8 bash only activate the new gcc temporarily until the session is end. If you want to always use the new gcc, you could run command *echo \"scl enable devtoolset-8 bash\" >> ~/.bash_profile*, system will automatically activate the new gcc after restarting."
msgstr ""

#: ../../source/Installation-en.rstd:133
msgid "Database Environment"
msgstr ""

#: ../../source/Installation-en.rstd:136
msgid "Note: These libraries below are not mandatory. You could choose to install one or more database according to your actual needs."
msgstr ""

#: ../../source/Installation-en.rstd:139
msgid "Note: If you want to develop you webapp with database, please install the database develop environment first, then install drogon, otherwise you will encounter a *NO DATABASE FOUND* issue."
msgstr ""

#: ../../source/Installation-en.rstd:142
msgid "PostgreSQL"
msgstr ""

#: ../../source/Installation-en.rstd:144
msgid "PostgreSQL's native C library libpq needs to be installed. The installation is as follows:"
msgstr ""

#: ../../source/Installation-en.rstd:146
msgid "ubuntu 16: sudo apt-get install postgresql-server-dev-all"
msgstr ""

#: ../../source/Installation-en.rstd:147
msgid "ubuntu 18: sudo apt-get install postgresql-all"
msgstr ""

#: ../../source/Installation-en.rstd:148
msgid "centOS 7: yum install postgresql-devel"
msgstr ""

#: ../../source/Installation-en.rstd:149
msgid "MacOS: brew install postgresql"
msgstr ""

#: ../../source/Installation-en.rstd:152
msgid "MySQL"
msgstr ""

#: ../../source/Installation-en.rstd:154
msgid "MySQL's native library does not support asynchronous read and write. Fortunately, MySQL also has a version of MariaDB maintained by the original developer community. This version is compatible with MySQL, and its development library supports asynchronous read and write. Therefore, Drogon uses the MariaDB development library to provide the right MySQL support, as a best practice，your operating system shouldn't install both Mysql and MariaDB at the same time."
msgstr ""

#: ../../source/Installation-en.rstd:156
msgid "MariaDB installation is as follows："
msgstr ""

#: ../../source/Installation-en.rstd:158
msgid "ubuntu: sudo apt install libmariadbclient-dev"
msgstr ""

#: ../../source/Installation-en.rstd:159
msgid "centOS 7: yum install mariadb-devel"
msgstr ""

#: ../../source/Installation-en.rstd:160
msgid "MacOS: brew install mariadb"
msgstr ""

#: ../../source/Installation-en.rstd:163
msgid "Sqlite3"
msgstr ""

#: ../../source/Installation-en.rstd:165
msgid "ubuntu: sudo apt-get install libsqlite3-dev"
msgstr ""

#: ../../source/Installation-en.rstd:166
msgid "centOS: yum install sqlite-devel"
msgstr ""

#: ../../source/Installation-en.rstd:167
msgid "MacOS: brew install sqlite3"
msgstr ""

#: ../../source/Installation-en.rstd:170
msgid "Note: Some of the above commands only install the development library. If you want to install a server also, please use Google search yourself."
msgstr ""

#: ../../source/Installation-en.rstd:174
msgid "Drogon installation"
msgstr ""

#: ../../source/Installation-en.rstd:176
msgid "Assuming that the above environment and library dependencies are all ready, the installation process is very simple;"
msgstr ""

#: ../../source/Installation-en.rstd:189
msgid "The default is to compile the debug version. If you want to compile the release version, the cmake command should take the following parameters:"
msgstr ""

#: ../../source/Installation-en.rstd:195
msgid "After the installation is complete, the following files will be installed in the system（One can change the installation location with the CMAKE_INSTALL_PREFIX option）:"
msgstr ""

#: ../../source/Installation-en.rstd:197
msgid "The header file of drogon is installed into /usr/local/include/drogon;"
msgstr ""

#: ../../source/Installation-en.rstd:198
msgid "The drogon library file libdrogon.a is installed into /usr/local/lib;"
msgstr ""

#: ../../source/Installation-en.rstd:199
msgid "Drogon's command line tool drogon_ctl is installed into /usr/local/bin;"
msgstr ""

#: ../../source/Installation-en.rstd:200
msgid "The trantor header file is installed into /usr/local/include/trantor;"
msgstr ""

#: ../../source/Installation-en.rstd:201
msgid "The trantor library file libtrantor.a is installed into /usr/local/lib;"
msgstr ""

#: ../../source/Installation-en.rstd:204
msgid "Include drogon source code locally"
msgstr ""

#: ../../source/Installation-en.rstd:206
msgid "Of course, you can also include the drogon source in your project. Suppose you put the drogon under the third_party of your project directory (don't forget to update submodule in the drogon source directory). Then, you only need to add the following two lines to your project's cmake file:"
msgstr ""

#: ../../source/Installation-en.rstd:214
msgid "Use vcpkg"
msgstr ""

#: ../../source/Installation-en.rstd:216
msgid "The easiest way to install drogon on windows is to use vcpkg"
msgstr ""

#: ../../source/Installation-en.rstd:222
msgid "Or"
msgstr ""

#: ../../source/Installation-en.rstd:229
msgid "Use Docker Image"
msgstr ""

#: ../../source/Installation-en.rstd:231
msgid "We also provide a pre-build docker image on the `docker hub <https://hub.docker.com/r/drogonframework/drogon>`_ . All dependencies of Drogon and Drogon itself are already installed in the docker environment, where users can build Drogon-based applications directly."
msgstr ""

