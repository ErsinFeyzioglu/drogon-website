<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Overview</title>
    <link rel="stylesheet" href="_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="_static/pygments.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="overview">
<h1>Overview</h1>
<p><em>Drogon</em> is a C++14/17-based HTTP application framework. Drogon can be used to easily build various types of web application server programs using C++.</p>
<p><em>Drogon</em> is the name of a dragon in the American TV series “Game of Thrones” that I really like.</p>
<p>Drogon’s main application platform is Linux. It also supports Mac OS, FreeBSD and Windows.</p>
<p>Its main features are as follows:</p>
<blockquote>
<div><ul class="simple">
<li><p>Use a non-blocking I/O network lib based on epoll (kqueue under macOS/FreeBSD) to provide high-concurrency, high-performance network IO, please visit the <a class="reference external" href="https://www.techempower.com/benchmarks/#section=data-r19&amp;hw=ph&amp;test=composite">TFB Tests Results</a><span class="link-target"> [https://www.techempower.com/benchmarks/#section=data-r19&amp;hw=ph&amp;test=composite]</span>  for more details;</p></li>
<li><p>Provide a completely asynchronous programming mode;</p></li>
<li><p>Support Http1.0/1.1 (server side and client side);</p></li>
<li><p>Based on template, a simple reflection mechanism is implemented to completely decouple the main program framework, controllers and views.</p></li>
<li><p>Support cookies and built-in sessions;</p></li>
<li><p>Support back-end rendering, the controller generates the data to the view to generate the Html page. Views are described by CSP template files, C++ codes are embedded into Html pages through CSP tags. And the drogon command-line tool automatically generates the C++ code files for compilation;</p></li>
<li><p>Support view page dynamic loading (dynamic compilation and loading at runtime);</p></li>
<li><p>Provide a convenient and flexible routing solution from the path to the controller handler;</p></li>
<li><p>Support filter chains to facilitate the execution of unified logic (such as login verification, Http Method constraint verification, etc.) before handling HTTP requests;</p></li>
<li><p>Support https (based on OpenSSL);</p></li>
<li><p>Support WebSocket (server side and client side);</p></li>
<li><p>Support JSON format request and response, very friendly to the Restful API application development;</p></li>
<li><p>Support file download and upload;</p></li>
<li><p>Support gzip, brotli compression transmission;</p></li>
<li><p>Support pipelining;</p></li>
<li><p>Provide a lightweight command line tool, drogon_ctl, to simplify the creation of various classes in Drogon and the generation of view code;</p></li>
<li><p>Support non-blocking I/O based asynchronously reading and writing database (PostgreSQL and MySQL(MariaDB) database);</p></li>
<li><p>Support asynchronously reading and writing sqlite3 database based on thread pool;</p></li>
<li><p>Support ARM Architecture;</p></li>
<li><p>Provide a convenient lightweight ORM implementation that supports for regular object-to-database bidirectional mapping;</p></li>
<li><p>Support plugins which can be installed by the configuration file at load time;</p></li>
<li><p>Support AOP with build-in joinpoints.</p></li>
</ul>
</div></blockquote>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>